class Solution:
    def singleNonDuplicate(self, nums: List[int]) -> int:
        if len(nums)==1:
            return nums[0]
        if nums[0] != nums[1]:
            return nums[0]
        if nums[-1] != nums[-2]:
            return nums[-1]
        l,r=0,len(nums)-1
        m = (l+r)//2
        if nums[m-1] != nums[m] and nums[m+1] != nums[m]:
            return nums[m]
        if nums[m-1] == nums[m]:
            if len(nums[:m+1])%2!=0:
                if len(nums[:m+1]) > 2:
                    return self.singleNonDuplicate(nums[:m+1])
            else:
                if len(nums[m+1:]) > 2:
                    return self.singleNonDuplicate(nums[m+1:])
        else:
            if len(nums[m:])%2!=0:
                if len(nums[m:]) > 2:
                    return self.singleNonDuplicate(nums[m:])
            else:
                if len(nums[:m]) > 2:
                    return self.singleNonDuplicate(nums[:m])
